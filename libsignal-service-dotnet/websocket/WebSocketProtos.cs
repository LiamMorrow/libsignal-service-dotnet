// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: WebSocketResources.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace libsignalservice.websocket {

  /// <summary>Holder for reflection information generated from WebSocketResources.proto</summary>
  public static partial class WebSocketResourcesReflection {

    #region Descriptor
    /// <summary>File descriptor for WebSocketResources.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static WebSocketResourcesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChhXZWJTb2NrZXRSZXNvdXJjZXMucHJvdG8SCnRleHRzZWN1cmUingEKF1dl",
            "YlNvY2tldFJlcXVlc3RNZXNzYWdlEg4KBHZlcmIYASABKAlIABIOCgRwYXRo",
            "GAIgASgJSAESDgoEYm9keRgDIAEoDEgCEg8KB2hlYWRlcnMYBSADKAkSDAoC",
            "aWQYBCABKARIA0IMCgp2ZXJiX29uZW9mQgwKCnBhdGhfb25lb2ZCDAoKYm9k",
            "eV9vbmVvZkIKCghpZF9vbmVvZiKpAQoYV2ViU29ja2V0UmVzcG9uc2VNZXNz",
            "YWdlEgwKAmlkGAEgASgESAASEAoGc3RhdHVzGAIgASgNSAESEQoHbWVzc2Fn",
            "ZRgDIAEoCUgCEg8KB2hlYWRlcnMYBSADKAkSDgoEYm9keRgEIAEoDEgDQgoK",
            "CGlkX29uZW9mQg4KDHN0YXR1c19vbmVvZkIPCg1tZXNzYWdlX29uZW9mQgwK",
            "CmJvZHlfb25lb2YimAIKEFdlYlNvY2tldE1lc3NhZ2USMQoEdHlwZRgBIAEo",
            "DjIhLnRleHRzZWN1cmUuV2ViU29ja2V0TWVzc2FnZS5UeXBlSAASNgoHcmVx",
            "dWVzdBgCIAEoCzIjLnRleHRzZWN1cmUuV2ViU29ja2V0UmVxdWVzdE1lc3Nh",
            "Z2VIARI4CghyZXNwb25zZRgDIAEoCzIkLnRleHRzZWN1cmUuV2ViU29ja2V0",
            "UmVzcG9uc2VNZXNzYWdlSAIiLgoEVHlwZRILCgdVTktOT1dOEAASCwoHUkVR",
            "VUVTVBABEgwKCFJFU1BPTlNFEAJCDAoKdHlwZV9vbmVvZkIPCg1yZXF1ZXN0",
            "X29uZW9mQhAKDnJlc3BvbnNlX29uZW9mQmAKMG9yZy53aGlzcGVyc3lzdGVt",
            "cy50ZXh0c2VjdXJlLmludGVybmFsLndlYnNvY2tldEIPV2ViU29ja2V0UHJv",
            "dG9zqgIabGlic2lnbmFsc2VydmljZS53ZWJzb2NrZXRiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.websocket.WebSocketRequestMessage), global::libsignalservice.websocket.WebSocketRequestMessage.Parser, new[]{ "Verb", "Path", "Body", "Headers", "Id" }, new[]{ "VerbOneof", "PathOneof", "BodyOneof", "IdOneof" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.websocket.WebSocketResponseMessage), global::libsignalservice.websocket.WebSocketResponseMessage.Parser, new[]{ "Id", "Status", "Message", "Headers", "Body" }, new[]{ "IdOneof", "StatusOneof", "MessageOneof", "BodyOneof" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::libsignalservice.websocket.WebSocketMessage), global::libsignalservice.websocket.WebSocketMessage.Parser, new[]{ "Type", "Request", "Response" }, new[]{ "TypeOneof", "RequestOneof", "ResponseOneof" }, new[]{ typeof(global::libsignalservice.websocket.WebSocketMessage.Types.Type) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class WebSocketRequestMessage : pb::IMessage<WebSocketRequestMessage> {
    private static readonly pb::MessageParser<WebSocketRequestMessage> _parser = new pb::MessageParser<WebSocketRequestMessage>(() => new WebSocketRequestMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebSocketRequestMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.websocket.WebSocketResourcesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebSocketRequestMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebSocketRequestMessage(WebSocketRequestMessage other) : this() {
      headers_ = other.headers_.Clone();
      switch (other.VerbOneofCase) {
        case VerbOneofOneofCase.Verb:
          Verb = other.Verb;
          break;
      }

      switch (other.PathOneofCase) {
        case PathOneofOneofCase.Path:
          Path = other.Path;
          break;
      }

      switch (other.BodyOneofCase) {
        case BodyOneofOneofCase.Body:
          Body = other.Body;
          break;
      }

      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebSocketRequestMessage Clone() {
      return new WebSocketRequestMessage(this);
    }

    /// <summary>Field number for the "verb" field.</summary>
    public const int VerbFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Verb {
      get { return verbOneofCase_ == VerbOneofOneofCase.Verb ? (string) verbOneof_ : ""; }
      set {
        verbOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        verbOneofCase_ = VerbOneofOneofCase.Verb;
      }
    }

    /// <summary>Field number for the "path" field.</summary>
    public const int PathFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return pathOneofCase_ == PathOneofOneofCase.Path ? (string) pathOneof_ : ""; }
      set {
        pathOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        pathOneofCase_ = PathOneofOneofCase.Path;
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return bodyOneofCase_ == BodyOneofOneofCase.Body ? (pb::ByteString) bodyOneof_ : pb::ByteString.Empty; }
      set {
        bodyOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        bodyOneofCase_ = BodyOneofOneofCase.Body;
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_headers_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> headers_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return idOneofCase_ == IdOneofOneofCase.Id ? (ulong) idOneof_ : 0UL; }
      set {
        idOneof_ = value;
        idOneofCase_ = IdOneofOneofCase.Id;
      }
    }

    private object verbOneof_;
    /// <summary>Enum of possible cases for the "verb_oneof" oneof.</summary>
    public enum VerbOneofOneofCase {
      None = 0,
      Verb = 1,
    }
    private VerbOneofOneofCase verbOneofCase_ = VerbOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public VerbOneofOneofCase VerbOneofCase {
      get { return verbOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearVerbOneof() {
      verbOneofCase_ = VerbOneofOneofCase.None;
      verbOneof_ = null;
    }

    private object pathOneof_;
    /// <summary>Enum of possible cases for the "path_oneof" oneof.</summary>
    public enum PathOneofOneofCase {
      None = 0,
      Path = 2,
    }
    private PathOneofOneofCase pathOneofCase_ = PathOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PathOneofOneofCase PathOneofCase {
      get { return pathOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPathOneof() {
      pathOneofCase_ = PathOneofOneofCase.None;
      pathOneof_ = null;
    }

    private object bodyOneof_;
    /// <summary>Enum of possible cases for the "body_oneof" oneof.</summary>
    public enum BodyOneofOneofCase {
      None = 0,
      Body = 3,
    }
    private BodyOneofOneofCase bodyOneofCase_ = BodyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BodyOneofOneofCase BodyOneofCase {
      get { return bodyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBodyOneof() {
      bodyOneofCase_ = BodyOneofOneofCase.None;
      bodyOneof_ = null;
    }

    private object idOneof_;
    /// <summary>Enum of possible cases for the "id_oneof" oneof.</summary>
    public enum IdOneofOneofCase {
      None = 0,
      Id = 4,
    }
    private IdOneofOneofCase idOneofCase_ = IdOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdOneofOneofCase IdOneofCase {
      get { return idOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIdOneof() {
      idOneofCase_ = IdOneofOneofCase.None;
      idOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebSocketRequestMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebSocketRequestMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Verb != other.Verb) return false;
      if (Path != other.Path) return false;
      if (Body != other.Body) return false;
      if(!headers_.Equals(other.headers_)) return false;
      if (Id != other.Id) return false;
      if (VerbOneofCase != other.VerbOneofCase) return false;
      if (PathOneofCase != other.PathOneofCase) return false;
      if (BodyOneofCase != other.BodyOneofCase) return false;
      if (IdOneofCase != other.IdOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (verbOneofCase_ == VerbOneofOneofCase.Verb) hash ^= Verb.GetHashCode();
      if (pathOneofCase_ == PathOneofOneofCase.Path) hash ^= Path.GetHashCode();
      if (bodyOneofCase_ == BodyOneofOneofCase.Body) hash ^= Body.GetHashCode();
      hash ^= headers_.GetHashCode();
      if (idOneofCase_ == IdOneofOneofCase.Id) hash ^= Id.GetHashCode();
      hash ^= (int) verbOneofCase_;
      hash ^= (int) pathOneofCase_;
      hash ^= (int) bodyOneofCase_;
      hash ^= (int) idOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (verbOneofCase_ == VerbOneofOneofCase.Verb) {
        output.WriteRawTag(10);
        output.WriteString(Verb);
      }
      if (pathOneofCase_ == PathOneofOneofCase.Path) {
        output.WriteRawTag(18);
        output.WriteString(Path);
      }
      if (bodyOneofCase_ == BodyOneofOneofCase.Body) {
        output.WriteRawTag(26);
        output.WriteBytes(Body);
      }
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        output.WriteRawTag(32);
        output.WriteUInt64(Id);
      }
      headers_.WriteTo(output, _repeated_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (verbOneofCase_ == VerbOneofOneofCase.Verb) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Verb);
      }
      if (pathOneofCase_ == PathOneofOneofCase.Path) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (bodyOneofCase_ == BodyOneofOneofCase.Body) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      size += headers_.CalculateSize(_repeated_headers_codec);
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebSocketRequestMessage other) {
      if (other == null) {
        return;
      }
      headers_.Add(other.headers_);
      switch (other.VerbOneofCase) {
        case VerbOneofOneofCase.Verb:
          Verb = other.Verb;
          break;
      }

      switch (other.PathOneofCase) {
        case PathOneofOneofCase.Path:
          Path = other.Path;
          break;
      }

      switch (other.BodyOneofCase) {
        case BodyOneofOneofCase.Body:
          Body = other.Body;
          break;
      }

      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Verb = input.ReadString();
            break;
          }
          case 18: {
            Path = input.ReadString();
            break;
          }
          case 26: {
            Body = input.ReadBytes();
            break;
          }
          case 32: {
            Id = input.ReadUInt64();
            break;
          }
          case 42: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class WebSocketResponseMessage : pb::IMessage<WebSocketResponseMessage> {
    private static readonly pb::MessageParser<WebSocketResponseMessage> _parser = new pb::MessageParser<WebSocketResponseMessage>(() => new WebSocketResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebSocketResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.websocket.WebSocketResourcesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebSocketResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebSocketResponseMessage(WebSocketResponseMessage other) : this() {
      headers_ = other.headers_.Clone();
      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      switch (other.StatusOneofCase) {
        case StatusOneofOneofCase.Status:
          Status = other.Status;
          break;
      }

      switch (other.MessageOneofCase) {
        case MessageOneofOneofCase.Message:
          Message = other.Message;
          break;
      }

      switch (other.BodyOneofCase) {
        case BodyOneofOneofCase.Body:
          Body = other.Body;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebSocketResponseMessage Clone() {
      return new WebSocketResponseMessage(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Id {
      get { return idOneofCase_ == IdOneofOneofCase.Id ? (ulong) idOneof_ : 0UL; }
      set {
        idOneof_ = value;
        idOneofCase_ = IdOneofOneofCase.Id;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Status {
      get { return statusOneofCase_ == StatusOneofOneofCase.Status ? (uint) statusOneof_ : 0; }
      set {
        statusOneof_ = value;
        statusOneofCase_ = StatusOneofOneofCase.Status;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return messageOneofCase_ == MessageOneofOneofCase.Message ? (string) messageOneof_ : ""; }
      set {
        messageOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        messageOneofCase_ = MessageOneofOneofCase.Message;
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_headers_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> headers_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return bodyOneofCase_ == BodyOneofOneofCase.Body ? (pb::ByteString) bodyOneof_ : pb::ByteString.Empty; }
      set {
        bodyOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        bodyOneofCase_ = BodyOneofOneofCase.Body;
      }
    }

    private object idOneof_;
    /// <summary>Enum of possible cases for the "id_oneof" oneof.</summary>
    public enum IdOneofOneofCase {
      None = 0,
      Id = 1,
    }
    private IdOneofOneofCase idOneofCase_ = IdOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdOneofOneofCase IdOneofCase {
      get { return idOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearIdOneof() {
      idOneofCase_ = IdOneofOneofCase.None;
      idOneof_ = null;
    }

    private object statusOneof_;
    /// <summary>Enum of possible cases for the "status_oneof" oneof.</summary>
    public enum StatusOneofOneofCase {
      None = 0,
      Status = 2,
    }
    private StatusOneofOneofCase statusOneofCase_ = StatusOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StatusOneofOneofCase StatusOneofCase {
      get { return statusOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearStatusOneof() {
      statusOneofCase_ = StatusOneofOneofCase.None;
      statusOneof_ = null;
    }

    private object messageOneof_;
    /// <summary>Enum of possible cases for the "message_oneof" oneof.</summary>
    public enum MessageOneofOneofCase {
      None = 0,
      Message = 3,
    }
    private MessageOneofOneofCase messageOneofCase_ = MessageOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageOneofOneofCase MessageOneofCase {
      get { return messageOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearMessageOneof() {
      messageOneofCase_ = MessageOneofOneofCase.None;
      messageOneof_ = null;
    }

    private object bodyOneof_;
    /// <summary>Enum of possible cases for the "body_oneof" oneof.</summary>
    public enum BodyOneofOneofCase {
      None = 0,
      Body = 4,
    }
    private BodyOneofOneofCase bodyOneofCase_ = BodyOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BodyOneofOneofCase BodyOneofCase {
      get { return bodyOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearBodyOneof() {
      bodyOneofCase_ = BodyOneofOneofCase.None;
      bodyOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebSocketResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebSocketResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Status != other.Status) return false;
      if (Message != other.Message) return false;
      if(!headers_.Equals(other.headers_)) return false;
      if (Body != other.Body) return false;
      if (IdOneofCase != other.IdOneofCase) return false;
      if (StatusOneofCase != other.StatusOneofCase) return false;
      if (MessageOneofCase != other.MessageOneofCase) return false;
      if (BodyOneofCase != other.BodyOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (idOneofCase_ == IdOneofOneofCase.Id) hash ^= Id.GetHashCode();
      if (statusOneofCase_ == StatusOneofOneofCase.Status) hash ^= Status.GetHashCode();
      if (messageOneofCase_ == MessageOneofOneofCase.Message) hash ^= Message.GetHashCode();
      hash ^= headers_.GetHashCode();
      if (bodyOneofCase_ == BodyOneofOneofCase.Body) hash ^= Body.GetHashCode();
      hash ^= (int) idOneofCase_;
      hash ^= (int) statusOneofCase_;
      hash ^= (int) messageOneofCase_;
      hash ^= (int) bodyOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        output.WriteRawTag(8);
        output.WriteUInt64(Id);
      }
      if (statusOneofCase_ == StatusOneofOneofCase.Status) {
        output.WriteRawTag(16);
        output.WriteUInt32(Status);
      }
      if (messageOneofCase_ == MessageOneofOneofCase.Message) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (bodyOneofCase_ == BodyOneofOneofCase.Body) {
        output.WriteRawTag(34);
        output.WriteBytes(Body);
      }
      headers_.WriteTo(output, _repeated_headers_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (idOneofCase_ == IdOneofOneofCase.Id) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Id);
      }
      if (statusOneofCase_ == StatusOneofOneofCase.Status) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Status);
      }
      if (messageOneofCase_ == MessageOneofOneofCase.Message) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      size += headers_.CalculateSize(_repeated_headers_codec);
      if (bodyOneofCase_ == BodyOneofOneofCase.Body) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebSocketResponseMessage other) {
      if (other == null) {
        return;
      }
      headers_.Add(other.headers_);
      switch (other.IdOneofCase) {
        case IdOneofOneofCase.Id:
          Id = other.Id;
          break;
      }

      switch (other.StatusOneofCase) {
        case StatusOneofOneofCase.Status:
          Status = other.Status;
          break;
      }

      switch (other.MessageOneofCase) {
        case MessageOneofOneofCase.Message:
          Message = other.Message;
          break;
      }

      switch (other.BodyOneofCase) {
        case BodyOneofOneofCase.Body:
          Body = other.Body;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt64();
            break;
          }
          case 16: {
            Status = input.ReadUInt32();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 34: {
            Body = input.ReadBytes();
            break;
          }
          case 42: {
            headers_.AddEntriesFrom(input, _repeated_headers_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class WebSocketMessage : pb::IMessage<WebSocketMessage> {
    private static readonly pb::MessageParser<WebSocketMessage> _parser = new pb::MessageParser<WebSocketMessage>(() => new WebSocketMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<WebSocketMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::libsignalservice.websocket.WebSocketResourcesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebSocketMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebSocketMessage(WebSocketMessage other) : this() {
      switch (other.TypeOneofCase) {
        case TypeOneofOneofCase.Type:
          Type = other.Type;
          break;
      }

      switch (other.RequestOneofCase) {
        case RequestOneofOneofCase.Request:
          Request = other.Request.Clone();
          break;
      }

      switch (other.ResponseOneofCase) {
        case ResponseOneofOneofCase.Response:
          Response = other.Response.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public WebSocketMessage Clone() {
      return new WebSocketMessage(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.websocket.WebSocketMessage.Types.Type Type {
      get { return typeOneofCase_ == TypeOneofOneofCase.Type ? (global::libsignalservice.websocket.WebSocketMessage.Types.Type) typeOneof_ : 0; }
      set {
        typeOneof_ = value;
        typeOneofCase_ = TypeOneofOneofCase.Type;
      }
    }

    /// <summary>Field number for the "request" field.</summary>
    public const int RequestFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.websocket.WebSocketRequestMessage Request {
      get { return requestOneofCase_ == RequestOneofOneofCase.Request ? (global::libsignalservice.websocket.WebSocketRequestMessage) requestOneof_ : null; }
      set {
        requestOneof_ = value;
        requestOneofCase_ = value == null ? RequestOneofOneofCase.None : RequestOneofOneofCase.Request;
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::libsignalservice.websocket.WebSocketResponseMessage Response {
      get { return responseOneofCase_ == ResponseOneofOneofCase.Response ? (global::libsignalservice.websocket.WebSocketResponseMessage) responseOneof_ : null; }
      set {
        responseOneof_ = value;
        responseOneofCase_ = value == null ? ResponseOneofOneofCase.None : ResponseOneofOneofCase.Response;
      }
    }

    private object typeOneof_;
    /// <summary>Enum of possible cases for the "type_oneof" oneof.</summary>
    public enum TypeOneofOneofCase {
      None = 0,
      Type = 1,
    }
    private TypeOneofOneofCase typeOneofCase_ = TypeOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeOneofOneofCase TypeOneofCase {
      get { return typeOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTypeOneof() {
      typeOneofCase_ = TypeOneofOneofCase.None;
      typeOneof_ = null;
    }

    private object requestOneof_;
    /// <summary>Enum of possible cases for the "request_oneof" oneof.</summary>
    public enum RequestOneofOneofCase {
      None = 0,
      Request = 2,
    }
    private RequestOneofOneofCase requestOneofCase_ = RequestOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequestOneofOneofCase RequestOneofCase {
      get { return requestOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearRequestOneof() {
      requestOneofCase_ = RequestOneofOneofCase.None;
      requestOneof_ = null;
    }

    private object responseOneof_;
    /// <summary>Enum of possible cases for the "response_oneof" oneof.</summary>
    public enum ResponseOneofOneofCase {
      None = 0,
      Response = 3,
    }
    private ResponseOneofOneofCase responseOneofCase_ = ResponseOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseOneofOneofCase ResponseOneofCase {
      get { return responseOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearResponseOneof() {
      responseOneofCase_ = ResponseOneofOneofCase.None;
      responseOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as WebSocketMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(WebSocketMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(Request, other.Request)) return false;
      if (!object.Equals(Response, other.Response)) return false;
      if (TypeOneofCase != other.TypeOneofCase) return false;
      if (RequestOneofCase != other.RequestOneofCase) return false;
      if (ResponseOneofCase != other.ResponseOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (typeOneofCase_ == TypeOneofOneofCase.Type) hash ^= Type.GetHashCode();
      if (requestOneofCase_ == RequestOneofOneofCase.Request) hash ^= Request.GetHashCode();
      if (responseOneofCase_ == ResponseOneofOneofCase.Response) hash ^= Response.GetHashCode();
      hash ^= (int) typeOneofCase_;
      hash ^= (int) requestOneofCase_;
      hash ^= (int) responseOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (typeOneofCase_ == TypeOneofOneofCase.Type) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (requestOneofCase_ == RequestOneofOneofCase.Request) {
        output.WriteRawTag(18);
        output.WriteMessage(Request);
      }
      if (responseOneofCase_ == ResponseOneofOneofCase.Response) {
        output.WriteRawTag(26);
        output.WriteMessage(Response);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (typeOneofCase_ == TypeOneofOneofCase.Type) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (requestOneofCase_ == RequestOneofOneofCase.Request) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Request);
      }
      if (responseOneofCase_ == ResponseOneofOneofCase.Response) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Response);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(WebSocketMessage other) {
      if (other == null) {
        return;
      }
      switch (other.TypeOneofCase) {
        case TypeOneofOneofCase.Type:
          Type = other.Type;
          break;
      }

      switch (other.RequestOneofCase) {
        case RequestOneofOneofCase.Request:
          if (Request == null) {
            Request = new global::libsignalservice.websocket.WebSocketRequestMessage();
          }
          Request.MergeFrom(other.Request);
          break;
      }

      switch (other.ResponseOneofCase) {
        case ResponseOneofOneofCase.Response:
          if (Response == null) {
            Response = new global::libsignalservice.websocket.WebSocketResponseMessage();
          }
          Response.MergeFrom(other.Response);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            typeOneof_ = input.ReadEnum();
            typeOneofCase_ = TypeOneofOneofCase.Type;
            break;
          }
          case 18: {
            global::libsignalservice.websocket.WebSocketRequestMessage subBuilder = new global::libsignalservice.websocket.WebSocketRequestMessage();
            if (requestOneofCase_ == RequestOneofOneofCase.Request) {
              subBuilder.MergeFrom(Request);
            }
            input.ReadMessage(subBuilder);
            Request = subBuilder;
            break;
          }
          case 26: {
            global::libsignalservice.websocket.WebSocketResponseMessage subBuilder = new global::libsignalservice.websocket.WebSocketResponseMessage();
            if (responseOneofCase_ == ResponseOneofOneofCase.Response) {
              subBuilder.MergeFrom(Response);
            }
            input.ReadMessage(subBuilder);
            Response = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the WebSocketMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("REQUEST")] Request = 1,
        [pbr::OriginalName("RESPONSE")] Response = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
